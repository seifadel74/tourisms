import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { motion } from 'framer-motion';
import { User, Mail, Phone, MapPin, Edit, Save, X, Camera } from 'lucide-react';
import { useAuth } from '../contexts/AuthContext';
import { fetchUser, updateProfile as apiUpdateProfile } from '../api/user';
import { fetchBookings, deleteBooking } from '../api/booking';
import toast from 'react-hot-toast';
import './ProfilePage.css';

interface Booking {
  id: number;
  bookable_type: string;
  bookable?: {
    name: string;
  };
  check_in_date: string;
  check_out_date: string;
  guests_count: number;
  total_price: number;
  status: string;
  special_requests?: string;
}

const ProfilePage: React.FC = () => {
  const { user, updateProfile } = useAuth();
  const navigate = useNavigate();
  
  const [isEditing, setIsEditing] = useState(false);
  const [formData, setFormData] = useState({
    name: user?.name || '',
    email: user?.email || '',
    phone: user?.phone || '',
    address: user?.address || '',
    avatar: user?.avatar || ''
  });

  const [bookings, setBookings] = useState<Booking[]>([]);
  const [loadingBookings, setLoadingBookings] = useState(false);
  const [activeTab, setActiveTab] = useState('profile');

  useEffect(() => {
    const getUser = async () => {
      try {
        const userData = await fetchUser();
        setFormData({
          name: userData.name || '',
          email: userData.email || '',
          phone: userData.phone || '',
          address: userData.address || '',
          avatar: userData.avatar || '',
        });
      } catch (error: any) {
        toast.error(error.response?.data?.message || 'خطأ في تسجيل الدخول');
      }
    };
    
    if (user) {
      getUser();
      loadUserBookings();
    }
  }, [user]);

  const loadUserBookings = async () => {
    setLoadingBookings(true);
    try {
      const userBookings = await fetchBookings();
      setBookings(userBookings);
    } catch (error: any) {
      console.error('Error loading bookings:', error);
      toast.error('فشل في تحميل الحجوزات');
    } finally {
      setLoadingBookings(false);
    }
  };

  const handleCancelBooking = async (bookingId: number) => {
    if (!window.confirm('هل أنت متأكد من إلغاء هذا الحجز؟')) {
      return;
    }

    try {
      await deleteBooking(bookingId);
      toast.success('تم إلغاء الحجز بنجاح');
      loadUserBookings(); // Reload bookings
    } catch (error: any) {
      toast.error(error.response?.data?.message || 'فشل في إلغاء الحجز');
    }
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleSave = async () => {
    try {
      await apiUpdateProfile(formData);
      updateProfile(formData);
      setIsEditing(false);
      toast.success('تم تحديث الملف الشخصي بنجاح');
    } catch (error: any) {
      toast.error(error.response?.data?.message || 'خطأ في التحديث');
    }
  };

  const handleCancel = () => {
    setFormData({
      name: user?.name || '',
      email: user?.email || '',
      phone: user?.phone || '',
      address: user?.address || '',
      avatar: user?.avatar || ''
    });
    setIsEditing(false);
  };

  const handleAvatarChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = (e) => {
        const result = e.target?.result as string;
        setFormData(prev => ({
          ...prev,
          avatar: result
        }));
      };
      reader.readAsDataURL(file);
    }
  };



  if (!user) {
    navigate('/login');
    return null;
  }

  return (
    <div className="profile-container">
      <motion.div
        className="profile-card"
        initial={{ opacity: 0, y: 50 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
      >
        <div className="profile-header">
          <h1>الملف الشخصي</h1>
          <div className="profile-actions">
            {!isEditing ? (
              <motion.button
                className="edit-btn"
                onClick={() => setIsEditing(true)}
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
              >
                <Edit size={20} />
                تعديل
              </motion.button>
            ) : (
              <div className="edit-actions">
                <motion.button
                  className="save-btn"
                  onClick={handleSave}
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  <Save size={20} />
                  حفظ
                </motion.button>
                <motion.button
                  className="cancel-btn"
                  onClick={handleCancel}
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  <X size={20} />
                  إلغاء
                </motion.button>
              </div>
            )}
          </div>
        </div>

        {/* Navigation Tabs */}
        <div className="profile-tabs">
          <button 
            className={`tab ${activeTab === 'profile' ? 'active' : ''}`}
            onClick={() => setActiveTab('profile')}
          >
            📋 معلومات الملف الشخصي
          </button>
          <button 
            className={`tab ${activeTab === 'bookings' ? 'active' : ''}`}
            onClick={() => setActiveTab('bookings')}
          >
            🏨 حجوزاتي
          </button>
        </div>

        <div className="profile-content">
          {activeTab === 'profile' && (
            <>
              <div className="avatar-section">
                <div className="avatar-container">
                  <img 
                    src={formData.avatar || 'https://via.placeholder.com/150'} 
                    alt="صورة المستخدم" 
                    className="avatar"
                  />
                  {isEditing && (
                    <label className="avatar-upload">
                      <Camera size={20} />
                      <input
                        type="file"
                        accept="image/*"
                        onChange={handleAvatarChange}
                        style={{ display: 'none' }}
                      />
                    </label>
                  )}
                </div>
              </div>

                <div className="info-group">
                  <label className="info-label">
                    <User size={20} />
                    الاسم الكامل
                  </label>
                  {isEditing ? (
                    <input
                      type="text"
                      name="name"
                      value={formData.name}
                      onChange={handleInputChange}
                      className="info-input"
                      placeholder="أدخل اسمك الكامل"
                    />
                  ) : (
                    <div className="info-value">{formData.name}</div>
                  )}
                </div>

                <div className="info-group">
                  <label className="info-label">
                    <Mail size={20} />
                    البريد الإلكتروني
                  </label>
                  {isEditing ? (
                    <input
                      type="email"
                      name="email"
                      value={formData.email}
                      onChange={handleInputChange}
                      className="info-input"
                      placeholder="أدخل بريدك الإلكتروني"
                    />
                  ) : (
                    <div className="info-value">{formData.email}</div>
                  )}
                </div>

                <div className="info-group">
                  <label className="info-label">
                    <Phone size={20} />
                    رقم الهاتف
                  </label>
                  {isEditing ? (
                    <input
                      type="tel"
                      name="phone"
                      value={formData.phone}
                      onChange={handleInputChange}
                      className="info-input"
                      placeholder="أدخل رقم هاتفك"
                    />
                  ) : (
                    <div className="info-value">{formData.phone || 'غير محدد'}</div>
                  )}
                </div>

                <div className="info-group">
                  <label className="info-label">
                    <MapPin size={20} />
                    العنوان
                  </label>
                  {isEditing ? (
                    <input
                      type="text"
                      name="address"
                      value={formData.address}
                      onChange={handleInputChange}
                      className="info-input"
                      placeholder="أدخل عنوانك"
                    />
                  ) : (
                    <div className="info-value">{formData.address || 'غير محدد'}</div>
                  )}
                </div>
              </div>

              <div className="profile-stats">
                <div className="stat-card">
                  <div className="stat-number">5</div>
                  <div className="stat-label">الحجوزات السابقة</div>
                </div>
                <div className="stat-card">
                  <div className="stat-number">3</div>
                  <div className="stat-label">الحجوزات الحالية</div>
                </div>
                <div className="stat-card">
                  <div className="stat-number">4.8</div>
                  <div className="stat-label">التقييم العام</div>
                </div>
              </div>
            </>
          )}

          {activeTab === 'bookings' && (
            <div className="bookings-section">
              <h3>🏨 حجوزاتي</h3>
              
              {loadingBookings ? (
                <div className="loading-spinner">
                  <div className="spinner"></div>
                  <p>جاري تحميل الحجوزات...</p>
                </div>
              ) : bookings.length === 0 ? (
                <div className="no-bookings">
                  <div className="no-bookings-icon">📅</div>
                  <h4>لا توجد حجوزات</h4>
                  <p>لم تقم بأي حجوزات بعد. ابدأ بحجز فندق أو يخت!</p>
                </div>
              ) : (
                <div className="bookings-grid">
                  {bookings.map((booking) => (
                    <motion.div
                      key={booking.id}
                      className="booking-card"
                      initial={{ opacity: 0, y: 20 }}
                      animate={{ opacity: 1, y: 0 }}
                      transition={{ duration: 0.3 }}
                    >
                      <div className="booking-header">
                        <div className="booking-type">
                          {booking.bookable_type === 'App\\Models\\Hotel' ? '🏨 فندق' : '⛵ يخت'}
                        </div>
                        <div className={`booking-status status-${booking.status}`}>
                          {booking.status === 'pending' && '⏳ معلق'}
                          {booking.status === 'confirmed' && '✅ مؤكد'}
                          {booking.status === 'cancelled' && '❌ ملغي'}
                        </div>
                      </div>
                      
                      <div className="booking-details">
                        <h4>{booking.bookable?.name || 'غير محدد'}</h4>
                        <div className="booking-info">
                          <div className="info-item">
                            <span className="info-label">📅 تاريخ الوصول:</span>
                            <span className="info-value">{new Date(booking.check_in_date).toLocaleDateString('ar-EG')}</span>
                          </div>
                          <div className="info-item">
                            <span className="info-label">📅 تاريخ المغادرة:</span>
                            <span className="info-value">{new Date(booking.check_out_date).toLocaleDateString('ar-EG')}</span>
                          </div>
                          <div className="info-item">
                            <span className="info-label">👥 عدد الضيوف:</span>
                            <span className="info-value">{booking.guests_count}</span>
                          </div>
                          <div className="info-item">
                            <span className="info-label">💰 إجمالي السعر:</span>
                            <span className="info-value">${booking.total_price}</span>
                          </div>
                          {booking.special_requests && (
                            <div className="info-item">
                              <span className="info-label">📝 طلبات خاصة:</span>
                              <span className="info-value">{booking.special_requests}</span>
                            </div>
                          )}
                        </div>
                      </div>
                      
                      <div className="booking-actions">
                        <div className="booking-id">رقم الحجز: #{booking.id}</div>
                        {booking.status === 'pending' && (
                          <motion.button
                            className="cancel-booking-btn"
                            onClick={() => handleCancelBooking(booking.id)}
                            whileHover={{ scale: 1.05 }}
                            whileTap={{ scale: 0.95 }}
                          >
                            ❌ إلغاء الحجز
                          </motion.button>
                        )}
                        {booking.status === 'confirmed' && (
                          <div className="booking-confirmed">
                            ✅ تم تأكيد الحجز
                          </div>
                        )}
                        {booking.status === 'cancelled' && (
                          <div className="booking-cancelled">
                            ❌ تم إلغاء الحجز
                          </div>
                        )}
                      </div>
                    </motion.div>
                  ))}
                </div>
              )}
            </div>
          )}
        </div>
      </motion.div>
    </div>
  );
};

export default ProfilePage;